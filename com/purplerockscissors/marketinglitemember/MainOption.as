package com.purplerockscissors.marketinglitemember {	import caurina.transitions.Tweener;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.display.MovieClip;	import com.purplerockscissors.marketinglitemember.Container;	import com.purplerockscissors.marketinglitemember.MarketingLiteMember;	import flash.utils.setTimeout;	import flash.utils.setInterval;	import flash.utils.clearInterval;	import fl.text.TLFTextField;			public class MainOption extends Sprite {		private var _finding:int;				public var star:Star;		public var label:TLFTextField;				public function MainOption() {			//this.alpha = 0.0;			//this.scaleX = this.scaleY = 1.25;						this.buttonMode = true;			this.useHandCursor = true;						var time = 0;			switch(this.name) {				case "see":					time = 166;				break;				case "live":					time = 333;				break;				case "trust":					time = 500;				break;			}			setTimeout(animateIn, time);			_finding = setInterval(findField, 5);						this.addEventListener(MouseEvent.CLICK, this.clickHandler);			this.addEventListener(MouseEvent.ROLL_OUT, this.rollOutHandler);			this.addEventListener(MouseEvent.ROLL_OVER, this.rollOverHandler);		}				private function animateIn():void {			star.show();						//Tweener.addTween(this, {scaleX:1.0, scaleY:1.0, time:1.0, transition:"easeOutCirc"});			//Tweener.addTween(this, {alpha:1.0, time:1.0, transition:"linear"});		}		private function clickHandler(event:MouseEvent):void {			MarketingLiteMember.option = this.name;			switch(this.name) {				case "change":					finishTo("video");				break;				case "see":					//see					Object(parent).seePwd.show();					Object(parent).livePwd.show(false);					Object(parent).trustPwd.show(false);				break;				case "live":					//live					Object(parent).livePwd.show();					Object(parent).seePwd.show(false);					Object(parent).trustPwd.show(false);				break;				case "trust":					Object(parent).trustPwd.show();					Object(parent).seePwd.show(false);					Object(parent).livePwd.show(false);				break;			}		}		private function findField():void {			if(label) {				clearInterval(_finding);								label.alpha = 0.0;				label.mouseEnabled = false;				label.mouseChildren = false;			}		}		private function finishTo(frame):void {			Object(parent).switchTo(frame)			//Container.instance.gotoAndStop(frame);		}		private function labelShow(bool:Boolean=true):void {			if(bool) {				Tweener.addTween(label, {alpha:1.0, time:0.25, transition:"linear"});			} else {				Tweener.addTween(label, {alpha:0.0, time:0.25, transition:"linear"});			}		}		private function rollOutHandler(event:MouseEvent):void {			//star.show(false);			labelShow(false);		}		private function rollOverHandler(event:MouseEvent):void {			//star.show();			labelShow();		}	}}