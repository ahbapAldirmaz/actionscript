package com.purplerockscissors.marketinglitemember {	import flash.display.MovieClip;	import flash.events.ProgressEvent;	import flash.external.ExternalInterface;	import flash.events.Event;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import com.purplerockscissors.marketinglitemember.Container;	import com.google.analytics.AnalyticsTracker; 	import com.google.analytics.GATracker; 	import flash.net.SharedObject;		public class MarketingLiteMember extends MovieClip {		public static var live_version:Boolean = true;				private var _person:Object;		private var _loaded;				public static var sharedObject:SharedObject;		public static var instance:MarketingLiteMember;		public static var option:String;		public static var username:String;		public static var myStage:String = "stage1";		public function MarketingLiteMember() {			this.stage.align = StageAlign.TOP_LEFT;			this.stage.scaleMode = StageScaleMode.NO_SCALE;						if(loaderInfo.url.indexOf("file:/") > -1) MarketingLiteMember.live_version = false;			MarketingLiteMember.instance = this;						MarketingLiteMember.sharedObject = SharedObject.getLocal("bhg");						//ExternalInterface.addCallback("setHash", setHash);			//ExternalInterface.call("getHash");						//myStage = loaderInfo.parameters.stage;						addEventListener(Event.ENTER_FRAME, enterFrameHandler);						if(!MarketingLiteMember.live_version) {				if(false) {					setHash("Sarah");					myStage = "stage4";					MarketingLiteMember.username = "struelove";				}			} else {				if(loaderInfo.parameters.first_name) setHash(loaderInfo.parameters.first_name);				if(loaderInfo.parameters.stage) myStage = "stage" + loaderInfo.parameters.stage;				if(loaderInfo.parameters.username) MarketingLiteMember.username = loaderInfo.parameters.username;			}						stop();			check();		}						private function check():void {			if((_loaded >= 1) && Container.instance) {				removeEventListener(Event.ENTER_FRAME, enterFrameHandler);								if(person.first) {				//if(loaderInfo.parameters.first_name) {					Container.instance.gotoAndStop("intro");				} else {					Container.instance.gotoAndStop("email");				}			}		}		private function enterFrameHandler(event:Event):void {			_loaded = loaderInfo.bytesLoaded / loaderInfo.bytesTotal;						check();		}				public static function getTracker(obj):GATracker {			var t:GATracker = new GATracker(obj, "UA-15121550-3", "AS3", false);//!MarketingLiteMember.live_version);			return t;		}		public function get person():Object {			if(_person) return _person;			return {first:null, last:null};		}		public function set person(str):void {			str = String(str);						if(str.indexOf("-") > -1) {				var h = str.split("-");				_person = {first:h[0], last:h[1]};			} else if(str != "") {				_person = {first:str, last:''};			} else {				_person = {first:'', last:''};			}						//MarketingLiteMember.username = _person.first + " " + _person.last;		}		public function setHash(hash) {			person = hash;						check();		}				public static function get vstage():String {			var s = "stage1";			switch(MarketingLiteMember.option) {				case "see":					s = "stage2";				break;				case "live":					s = "stage3";				break;				case "trust":					s = "stage4";				break;			}						return s;		}	}	}